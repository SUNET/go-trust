# Custom TSL Generation Example for Go-Trust TSL Pipeline
# This example demonstrates how to:
# 1. Generate a TSL from directory-based metadata files
# 2. Validate the generated TSL
# 3. Optionally sign the TSL
# 4. Publish the generated TSL

# Step 1: Generate a TSL from directory structure with YAML metadata
# The directory structure should follow the convention:
# - scheme.yaml at the root
# - providers/ directory with subdirectories for each provider
# - Each provider has provider.yaml and service YAML files
- generate:
    - ./example-tsl
  
# Step 2: Log information about the generated TSL
- log:
    - "Generated TSL with %d providers"
  
# Step 3: Select certificates from the generated TSL
- select:
    - all
  
# Step 4: Validate the structure of the generated TSL
- validate:
    - structure                                   # Validate XML structure against schema
      
# Step 5: Sign the TSL (optional - uncomment and provide paths to use)
# - sign:
#     - /path/to/signing-cert.pem                  # Certificate for signing
#     - /path/to/signing-key.pem                   # Private key for signing
  
# Step 6: Publish the generated and optionally signed TSL
- publish:
    - ./output/generated
  
# Step 7: Also publish with tree structure
- publish:
    - ./output/generated-tree                     # Output directory
    - tree:territory                              # Use territory-based organization