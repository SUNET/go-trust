name: Go

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache: true
      
    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run tests with coverage
      run: go test -v -race -timeout 10m -coverprofile=coverage.txt -covermode=atomic ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        fail_ci_if_error: false
    
    - name: Generate coverage badge
      if: github.ref == 'refs/heads/main'
      uses: tj-actions/coverage-badge-go@v2
      with:
        filename: coverage.txt
        output: .badges/main/coverage.svg
    
    - name: Verify Changed files
      if: github.ref == 'refs/heads/main'
      uses: tj-actions/verify-changed-files@v17
      id: verify-changed-files
      with:
        files: |
          .badges/main/coverage.svg
    
    - name: Commit coverage badge
      if: github.ref == 'refs/heads/main' && steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git fetch origin badges || git branch badges
        git checkout badges
        mkdir -p .badges/main
        cp -f .badges/main/coverage.svg .badges/main/coverage.svg || true
        git add .badges/main/coverage.svg
        git commit -m "chore: Update coverage badge"
        git push origin badges --force

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache: true
      
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m